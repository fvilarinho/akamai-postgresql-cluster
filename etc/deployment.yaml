# Definition of the cluster with customizations (initialization, replicas, backups, monitoring and storage).
# Powered by Cloud Native PG (https://cloudnative-pg.io).
apiVersion: postgresql.cnpg.io/v1
kind: Cluster

metadata:
  namespace: ${NAMESPACE}
  name: ${IDENTIFIER}

spec:
  # PostgreSQL version.
  imageName: ghcr.io/cloudnative-pg/postgresql:${DATABASE_VERSION}
  imagePullPolicy: Always
  primaryUpdateStrategy: unsupervised

  # Number of nodes in the cluster.
  instances: ${NODES_COUNT}

  # Initialization.
  bootstrap:
    initdb:
      database: ${DATABASE_NAME}
      owner: ${DATABASE_OWNER}
      secret:
        name: ${IDENTIFIER}-auth-secret

  # Storage definition.
  storage:
    size: ${STORAGE_SIZE}Gi

  # Backup definition.
  backup:
    barmanObjectStore:
      destinationPath: s3://${IDENTIFIER}-${DATABASE_NAME}
      endpointURL: ${DATABASE_BACKUP_URL}
      s3Credentials:
        accessKeyId:
          name: ${IDENTIFIER}-backup-secret
          key: accessKey
        secretAccessKey:
          name: ${IDENTIFIER}-backup-secret
          key: secretKey
    retentionPolicy: "${DATABASE_BACKUP_RETENTION}d"
---
# Definition of the monitoring agent (Postgresql Prometheus Exporter).
apiVersion: apps/v1
kind: Deployment

metadata:
  namespace: ${NAMESPACE}
  name: ${IDENTIFIER}-monitoring-agent

spec:
  replicas: 1

  selector:
    matchLabels:
      app: ${IDENTIFIER}-monitoring-agent

  template:
    metadata:
      labels:
        app: ${IDENTIFIER}-monitoring-agent

    spec:
      containers:
        - name: ${IDENTIFIER}-monitoring-agent
          image: quay.io/prometheuscommunity/postgres-exporter:latest
          imagePullPolicy: Always

          env:
            - name: DATA_SOURCE_URI
              valueFrom:
                secretKeyRef:
                  name: ${IDENTIFIER}-monitoring-secret
                  key: connectionString

            - name: DATA_SOURCE_USER
              valueFrom:
                secretKeyRef:
                  name: ${IDENTIFIER}-monitoring-secret
                  key: username

            - name: DATA_SOURCE_PASS
              valueFrom:
                secretKeyRef:
                  name: ${IDENTIFIER}-monitoring-secret
                  key: password

          ports:
            - containerPort: 9187
---
# Definition of the monitoring server (Prometheus).
apiVersion: apps/v1
kind: Deployment

metadata:
  namespace: ${NAMESPACE}
  name: ${IDENTIFIER}-monitoring-server

spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${IDENTIFIER}-monitoring-server

  template:
    metadata:
      labels:
        app: ${IDENTIFIER}-monitoring-server
    spec:
      containers:
        - name: ${IDENTIFIER}-monitoring-server
          image: prom/prometheus:latest
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"

          ports:
            - containerPort: 9090

          volumeMounts:
            - name: ${IDENTIFIER}-monitoring-config
              mountPath: /etc/prometheus

      volumes:
        - name: ${IDENTIFIER}-monitoring-config
          configMap:
            name: ${IDENTIFIER}-monitoring-config